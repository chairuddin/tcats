<?php$hari_ini=date("Y-m-d H:i:s");$admin_id=$_SESSION['s_id'];if($action=="update_koreksi_essay") {	$valid=true;	$mysql->autocommit(false);	$id_quiz_done=cleanInput($_POST['id_quiz_done']);	list($schedule_id,$class,$quiz_id)=$mysql->query(" SELECT schedule_id,member_class,quiz_id FROM quiz_done WHERE id=$id_quiz_done  ")->fetch_row();			/* ambil skor maksimal untuk essay */		$score_max_essay = $mysql->get1value("SELECT score_essay FROM quiz_master WHERE id=$quiz_id ");		if($score_max_essay=='' or $score_max_essay<=0) {		sweetalert2($type="warning","Koreksi Essay gagal. Silahkan tentukan score maksimal untuk essay terlebih dahulu ",backendurl("quiz_master/edit/$quiz_id"));	}	/* ambil jumlah soal essay */	$jumlah_soal_essay = $mysql->get1value("SELECT count(id) FROM quiz_essay WHERE quiz_id=$quiz_id ");	$poin_max_soal=$score_max_essay/$jumlah_soal_essay;		$answer=$_POST['answer'];	$comment=$_POST['comment'];	$score_persen=$_POST['score_persen'];	$total_skor_essay=0;	foreach($answer as $id_essay => $answer) {		$sql_r=array();		$poin_per_soal=0;		if($score_persen[$id_essay]>0) {			$poin_per_soal=$poin_max_soal*($score_persen[$id_essay]/100);		}		$total_skor_essay+=$poin_per_soal;		$sql_r[]="score='".$poin_per_soal."'";		$sql_r[]="score_persen='".$score_persen[$id_essay]."'";		$sql_r[]="comment='".$comment[$id_essay]."'";		$sql_r[]="modified_by='$admin_id'";		$sql_r[]="modified_date='$hari_ini'";		$sql=" UPDATE quiz_done_essay SET ".join(" ,",$sql_r)." WHERE id_quiz_essay=$id_essay AND id_quiz_done=$id_quiz_done ";		$q=$mysql->query($sql);		if(!$q) {			$valid=false;		}	}	$update_skor_essay = $mysql->query("UPDATE quiz_done SET score_essay='$total_skor_essay' WHERE id=$id_quiz_done ");	if(!$update_skor_essay) {		$valid=false;	}	if($valid){		$mysql->commit();		$mysql->autocommit(true);		sweetalert2($type="success","Koreksi essay berhasil",backendurl("$modul/lihat_jawaban/$schedule_id?class=$class"));	} else {		$mysql->rollback();		sweetalert2($type="warning","Koreksi Essay gagal. ",backendurl("$modul/lihat_jawaban/$schedule_id?class=$class"));	}}/*Catatan pakai yona-validation:Form :	Form menggunakan class yona-validation	Tombol submit name=submitVar  : nama element harus sama dengan var   * *///$validation->set_validation(array('var'=>'grade','label'=>'Grade'))->required();$validation->set_validation(array('var'=>'quiz_id','label'=>'Soal'))->required();$validation->set_validation(array('var'=>'exam_date','label'=>'Tanggal mulai'))->required();$validation->set_validation(array('var'=>'exam_time','label'=>'Waktu mulai'))->required();$validation->set_validation(array('var'=>'exam_date_expired','label'=>'Tanggal kadaluarsa'))->required();$validation->set_validation(array('var'=>'exam_time_expired','label'=>'Waktu kadaluarsa'))->required();//$validation->set_validation(array('var'=>'allow_class','label'=>'Kelas'))->required();//$validation->set_validation(array('var'=>'token','label'=>'Token'))->cek_token(5);//$validation->set_validation(array('var'=>'allow_class','label'=>'Kelas'))->required();$validation->generate_js_validation();if($action=="save" or $action=="update") {			${"is_late"}=cleanInput($_POST["is_late"]);	${"is_late"}=${"is_late"}==""?0:${"is_late"};		$r_allow_class=$_POST["allow_class"];	if(count($r_allow_class)>0){		$allow_class=join(",",$r_allow_class);	}else{		sweetalert2($type="warning"," Kelas harus dipilih. ",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));		die();	}		${"quiz_id"}=cleanInput($_POST["quiz_id"]);	${"exam_date"}=cleanInput($_POST["exam_date"]);	${"exam_time"}=cleanInput($_POST["exam_time"]);	${"token"}=cleanInput($_POST["token"]);				list($xd,$xm,$xy)=explode("/",$exam_date);	$tanggal="$xy-$xm-$xd $exam_time";		$is_late=true;//di harcode dulu	if (!$is_late) { 		$quiz_duration=$mysql->get1value("SELECT duration FROM quiz_master WHERE id='$quiz_id'");		$quiz_duration= ($quiz_duration*60);		$tanggal_expired=strtotime($tanggal)+$quiz_duration;		$tanggal_expired=date("Y-m-d H:i:s",$tanggal_expired);	} else {		${"exam_date_expired"}=cleanInput($_POST["exam_date_expired"]);		${"exam_time_expired"}=cleanInput($_POST["exam_time_expired"]);		list($xd,$xm,$xy)=explode("/",$exam_date_expired);		$tanggal_expired="$xy-$xm-$xd $exam_time_expired";	}		/*VALIDASI*/	$ketemu=false;	foreach($r_allow_class as $i =>$v){		$kondisi='';		if($action=='update') {			$kondisi=" and id<>$id ";		}		$r=$mysql->query("SELECT id FROM quiz_schedule WHERE quiz_id='$quiz_id' AND (FIND_IN_SET('$v',allow_class) or allow_class='ALL')  AND 		(tanggal<='$tanggal_expired'  AND tanggal_expired>='$tanggal') and is_deleted<>1 $kondisi");			if($r and $mysql->numrows($r)>0)		{				$ketemu=true;		}	}		if($ketemu){		sweetalert2($type="warning"," Jadwal uji untuk soal dan kelas terpilih  sudah ada",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));		exit();	}	if(strtotime($tanggal) > strtotime($tanggal_expired) ){		sweetalert2($type="warning"," Tanggal dan waktu kadaluarsar tidak valid ",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));				exit();	}	if($tanggal == $tanggal_expired ){		sweetalert2($type="warning"," Tanggal ujian dan kadaluarsa tidak boleh sama",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));				exit();	}			 	/*END VALIDASI*/			$qi=$mysql->query("SELECT code,title_id,duration,is_random,is_random_option,kkm FROM quiz_master WHERE id='$quiz_id'");	$qi_d=$mysql->assoc($qi);		$quiz_info=json_encode($qi_d);		$created_by=$_SESSION['s_id'];	$created_date=date("Y-m-d H:i:s");				$valid=true;	$id=$_POST['id'];				if($action=="save" and $token!=''){		$is_duplicate=$mysql->get1value("SELECT count(id) FROM quiz_schedule WHERE token='$token' ");	}	if($action=="update"  and $token!='') {		$is_duplicate=$mysql->get1value("SELECT count(id) FROM quiz_schedule WHERE token='$token' AND id<>$id ");	}			$qi=$mysql->query("SELECT code,title_id,duration,is_random,is_random_option,kkm FROM quiz_master WHERE id='$quiz_id'");	$qi_d=$mysql->assoc($qi);		$quiz_info=json_encode($qi_d);			$_POST['quiz_info']=$quiz_info;	$_POST['token']=$_POST['token'];	$_POST['quiz_id']=$quiz_id;	$_POST['allow_class']=$allow_class;	$_POST['tanggal']=$tanggal;	$_POST['tanggal_expired']=$tanggal_expired;	$_POST['is_late']=0;			if($validation->valid()){		$r_post=array(		'grade',		'token',		'quiz_id',		'quiz_info',		'allow_class',		'tanggal',		'tanggal_expired',		'is_late'		);				$sql_r = array();				if($action=="save") {			$sql_r[]="created_by='$admin_id'";			$sql_r[]="created_date='$hari_ini'";		}				if($action=="update") {			$sql_r[]="modified_by='$admin_id'";			$sql_r[]="modified_date='$hari_ini'";		}						foreach($r_post as $i => $v) {			//	$post=cleanInput($_POST[$v]); dimatikan dulu karena ada json kena clean langsung rusak			$post=$_POST[$v];			$sql_r[]="$v = '$post'";		}				if($action=="save") {			$sql=" INSERT INTO quiz_schedule SET ".join(" ,",$sql_r);			$q=$mysql->query($sql);			if(!$q) {				$valid=false;			}			$last_id=$mysql->insert_id();			if($token==""){				$token=generate_token_jadwal($last_id);				$update_token=$mysql->query("UPDATE quiz_schedule SET token='$token' WHERE id=$last_id");			}		}				if($action=="update") {			$sql=" UPDATE quiz_schedule SET ".join(" ,",$sql_r)." WHERE id=$id ";			$q=$mysql->query($sql);			if(!$q) {				$valid=false;			}		}								} else {		sweetalert2($type="warning",$msg=($action=="update"?"Update":"Tambah")." Jadwal gagal, data tidak valid",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));	}		if($valid){		sweetalert2($type="success",$msg=($action=="update"?"Update":"Tambah")." Jadwal berhasil",backendurl("$modul"));	} else {		sweetalert2($type="warning",$msg=($action=="update"?"Update":"Tambah")." Jadwal gagal. ",backendurl("$modul".($action=="update"?"/edit/$id":"/add")));	}	}if($action=="del"){	$is_arsip=$_GET['arsip'];		$is_arsip=1;	$valid=true;	$mysql->autocommit(false);		$field="		token, uniqid, member_id, member_code, 	member_class, member_fullname, start_time,start_time_real,	end_time, check_point, answer, answer_temp,	schedule_id, quiz_id, quiz_duration, quiz_title_id,	quiz_code, benar, salah, tidak_jawab,	score_master, kkm, score, is_done,	ip_address, browser_key, acak, acak_pilihan";	$id=cleanInput($id,'numeric');	$sql="SELECT id FROM quiz_done WHERE schedule_id='$id'";	$q=$mysql->query($sql);	$ada_peserta=false;	if($q and $mysql->numrows($q)>0){		$ada_peserta=true;		$sql="UPDATE $modul set is_deleted=1 WHERE id='$id' ";	}else{		$sql="DELETE FROM $modul WHERE id='$id'";	}		$r=$mysql->query($sql);	if($r and $ada_peserta and $is_arsip){		/*Pindahkan jawaban ke arsip* /			$sql="INSERT INTO quiz_done_arsip SELECT * FROM quiz_done WHERE schedule_id='$id' ";		$q=$mysql->query($sql);		if(!$q){			$valid=false;		}else{		*/ 			$sql="DELETE FROM quiz_done WHERE schedule_id='$id'";			$q=$mysql->query($sql);			if(!$q){				$valid=false;			}			//}		/*END Pindahkan jawaban ke arsip*/			/*Pindahkan jadwal ke arsip* /			$sql="INSERT INTO quiz_schedule_arsip SELECT * FROM quiz_schedule WHERE id='$id' ";		$q=$mysql->query($sql);		if(!$q){		$valid=false;		//die($mysql->showerror());		}else{		*/ 		$sql="DELETE FROM quiz_schedule WHERE id='$id'";			$q=$mysql->query($sql);			if(!$q){			$valid=false;			}else{			}				//}	}	if($valid)	{		$mysql->commit();		msg_warning(_BERHASILHAPUS,"success");		header("location:".backendurl("$modul/view"));		exit();	}	else	{		$mysql->rollback();		msg_warning(_GAGALHAPUS,"error");		header("location:".backendurl("$modul/view"));		exit();	}}?>